

# Example of a seperable VPA implemented in WinBugs.
# 
# Copied from an ICES CM 2004/D03. Report of the working group on methods of fish stock assessments. Copenhagen, Denmark
#
# Original by:Manica Azevedo: pp 116-127 (Appendix A)
# which was adapted from Nielsen A. 2000. Fish stock assessment using Markov Chain Monte Carlo. MSc thesis.

# Iberian Hake VPA

model {

  # likelihoods

  # Catch data (ages: 0-8, years: 1982-2002, unit: thousands)
    for( a in 1:A ) {
      for( y in 4:Y ) {
        logC[a,y] <- log( C[a,y] )
        logC[a,y] ~ dnorm( logmu.C[a,y], tau.C )
        logmu.C[a,y] <- log( F[a,y] / Z[a,y] * N[a,y] * ( 1 - exp(-Z[a,y])) ) )
    }}

  # Survey data : Spanish and Portugese
  # Survey data October (ages: 0-8, years: 1985-2002, unit: thousands)
    for( a in 1:A ) {
      for( y in 4:Y ) {
        logSO[a,y] <- log( SO[a,y-3] )
        logSO[a,y] ~ dnorm( logmu.SO[a,y], tau.s )
        logmu.SO[a,y] <- log( qs1[a,y] * exp(-Z[a,y]*10/12) * N[a,y] ) 
    }}

  # Survey data July (ages: 0-8, years: 1989-1993, 1995, 1997-2001, unit: thousands)
    for( a in 1:A ) {
      for( y in 8:12 ) {
        logSJ[a,y] <- log( SJ[a,y-7] )
        logSJ[a,y] ~ dnorm( logmu.SJ[a,y], tau.s )
        logmu.SO[a,y] <- log( qs1[a,y] * exp(-Z[a,y]*7/12) * N[a,y] ) 
    }}

    for( a in 1:A ) {
      y <- 14
        logSJ[a,y] <- log( SJ[a,y-7] )
        logSJ[a,y] ~ dnorm( logmu.SJ[a,y], tau.s )
        logmu.SO[a,y] <- log( qs1[a,y] * exp(-Z[a,y]*7/12) * N[a,y] ) 
    }

  # etc ..

  # Separable F (age, year)
    for( a in 1:A ) {
      for( y in 1:Y ) {
        Fay[a,y] <- Fa[a] * Fy[y]
    }}

  # Natural and total mortality
    for( a in 1:A ) {
      for( y in 1:Y ) {
        Z[a,y] <- F[a,y] + M[a,y]
        F[a,y] <- Fay[a,y]
    }}

    
  # Catchability
    for( a in 1:A) {
      for(y in 4:Y) {
        qs1[a,y] <- qs11.sa[a]
    }}

    for( a in 1:A) {
      qs2[a,14] <- qs22.sa[a]
      for( y in 8:12) {
        qs2[a,y] <- qs22.sa[a]
      }
      for( y in 16:20) {
        qs2[a,y] <- qs22.sa[a]
      }
    }}
  # etc .,,,

  # N-at-age
    for(y in 1:Y) {
      N.year1[y] ~ dunif(0,1)
      N[1,y] <- N.year1[y] * 1.0E6
    }
    N.age[1] <- N.year[1]

    for(a in 1:(A-1)) {
      N.age1[a] ~ dunif(0,1)
      N.age[a+] <- N.age1[a]
      N[a+,1] <- N.age[a+] * 2.0E5
    }

    for(a in 2:A) {
      for(y in 2:(Y+1)) {
        N[a,y] <- N[a-1,y-1] * exp(-Z[a-1, y-1])
    }}


  # Priors
    # Fa
      for (a in1:A) {
        Fa1[a] ~ dunif(0,2)  
        Fa[a] <- Fa1[a]
      }

    # Fy
      for(y in 1:Y) {
        Fy1[y] ~ dunif(0,2)
        Fy[y] <- Fy1[y]
      }

    # M
      for(a in 1:A) {
        for(y in 1:Y) {
          M1[a,y] ~ dunif(0.1, 0.3)
          M[a,y] <- M1[a,y]
        }
      }

    # catchability
      for(a in1:A) {
        qs11.sa[a] ~ dunif(6.0E-6,1)
        qs22.sa[a] ~ dunif(6.0E-6,1)
      }

    # tau
      tau.C ~ dgamma(4, 0.4)
      var.C <- 1/tau.C

      tau.s ~ dgamma(100, 100)
      var.s <- 1/tau.s

  # Stock characteristics
    # R
      for( y in 1:Y) {
        R[y] <- N[1,y]
      }

    # B, SSB
      for(a in 1:A) {
        for(y in 1:Y) {
          B[a,y] <- N[a,y] * w[a,y]
          SSB[a,y] <- B[a,y] * mat[a,y]
      }}

    # Fbar (age range: mina to maxa)
      for( y in 1:Y) {
        Fsum[y] <- sum(F[mina:maxa,y])
        Fbar[y] <- (Fsum[y])/(maxa-mina+1)
      }

    # Catch and catachability
    # residuals
      for(a in 1:A) {
        for(y in 1:Y) {
          C.est[a,y] <- F[a,y] / Z[a,y] * N[a,y] * (1-exp( -Z[a,y]))
          C.est[a,y] <- C[a,y] - C.est[a,y]
      }}
      C.resT <- sum(C.res[1:A, 1:Y])

    # Catchability
      for(a in 1:A) {
        for(y in 1:Y) {
          q.est[a,y] <- Survey[a,y] / N[a,y]
      }}


Data {}
Inits {}


